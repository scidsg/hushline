[tool.poetry]
name = "hushline"
version = "0.0.1"
description = "A lightweight, secure, and anonymous tip line for organizations and individuals."
authors = ["Science & Design, Inc. <hello@scidsg.org>"]
license = "AGPL 3.0"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
cryptography = "^42.0.5"
flask = "^3.0.2"
flask-migrate = "^4.0.7"
flask-sqlalchemy = "^3.1.1"
flask-wtf = "^1.2.1"
passlib = "^1.7.4"
pyotp = "^2.9.0"
pysequoia = "^0.1.23"
qrcode = "^7.4.2"
ruff = "^0.4.7"
psycopg = { extras = ["binary", "pool"], version = "^3.1.19" }
types-pkg-resources = "^0.1.3"
gunicorn = "^22.0.0"

[tool.poetry.group.dev.dependencies]
mypy = "^1.10.0"
pytest = "^8.1.1"
pytest-mock = "^3.12.0"
types-flask-migrate = "^4.0.0.20240311"
bs4 = "^0.0.2"

[[tool.poetry.packages]]
include = "hushline"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
pythonpath = "."

[tool.ruff]
line-length = 100
indent-width = 4

[tool.ruff.lint]
select = [
    # pycodestyle errors
    "E",
    # pyflakes
    "F",
    # isort
    "I",
    # flake8-gettext
    "INT",
    # flake8-pie
    "PIE",
    # pylint
    "PL",
    # flake8-pytest-style
    "PT",
    # flake8-pyi
    "PYI",
    # flake8-return
    "RET",
    # flake8-bandit
    "S",
    # flake8-simplify
    "SIM",
    # pyupgrade
    "UP",
    # pycodestyle warnings
    "W",
    # Unused noqa directive
    "RUF100",
]
ignore = [
    # https://docs.astral.sh/ruff/rules/too-many-statements/
    "PLR0915",
    # https://docs.astral.sh/ruff/rules/too-many-branches/
    "PLR0912",
]

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = [
    # https://docs.astral.sh/ruff/rules/assert/
    "S101",
    # https://docs.astral.sh/ruff/rules/magic-value-comparison/
    "PLR2004",
]
"migrations/versions/*.py" = [
    # https://docs.astral.sh/ruff/rules/unsorted-imports/
    "I001",
]

[tool.mypy]
python_version = "3.11"
ignore_missing_imports = true
no_implicit_optional = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
warn_unused_configs = true
exclude = '^migrations/env\.py$|^migrations/versions/.*\.py$|^volumes/.*'
